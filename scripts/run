#!/bin/sh
set -e

PASS="\e[1;32mPASS\e[0m"
FAIL="\e[1;31mFAIL\e[0m"

SCRIPTHOME="$(dirname $(realpath ${0}))"
BUSYBOX="$(which busybox)"
echo script at $SCRIPTHOME


DIR=$(mktemp -d)
ROOT="${DIR}/root"
mkdir "${ROOT}"
mkdir "${ROOT}/tests"

GO_TEST_BINARY="${ROOT}/tests/1"
LOGFILE="${DIR}/log"

# Build Go test binary.
go test \
   -ldflags='-extldflags=-static' \
   -trimpath \
   -tags 'osusergo netgo static_build linux' \
   -c -o "${GO_TEST_BINARY}"

cd "${ROOT}"

# Build root
mkdir -p proc sys tmp
mkdir -p etc/init.d

cat >etc/init.d/rcS <<'EOF'
#!/bin/busybox sh

# First set up busybox symlinks
for fn in $(busybox --list); do
  busybox ln -s /bin/busybox /bin/${fn} 2>/dev/null
done

# Mount file systems and set up networking
mount -a
ifconfig lo up

cat /etc/banner
date
echo
/tests/1 -test.v
poweroff -f
EOF

cat >etc/fstab <<'EOF'
# fs mntpt type opts dump pass
proc /proc proc defaults 0 0
sys /sys sysfs defaults 0 0
EOF

figlet "Test Run:" >etc/banner

cat >etc/hosts <<'EOF'
::1 localhost ip6-localhost ip6-loopback
127.0.0.1 localhost
EOF

function file_list() {
    cat <<EOF
dir /bin 0755 0 0
dir /etc 0755 0 0
dir /tests 0755 0 0

file /tests/1 ${GO_TEST_BINARY} 0755 0 0

# Busybox
file /bin/busybox ${BUSYBOX} 0755 0 0
slink /init /bin/busybox 0700 0 0

# some devices
dir /dev 0755 0 0
nod /dev/console 0600 0 0 c 5 1
nod /dev/null 0666 0 0 c 1 3
nod /dev/tty 0666 0 0 c 5 0
nod /dev/tty0 0666 0 0 c 4 0
nod /dev/ttyS0 0660 0 0 c 4 64
EOF

    echo
    echo "# Other files"
    for f in $(find *); do
        if [ -d "${f}" ]; then
            echo "dir /${f} 0755 0 0" 
        elif [ -f "${f}" ]; then
            echo "file /${f} ${f} 0755 0 0"
        fi
    done
}

file_list | $HOME/linux/usr/gen_init_cpio -c /dev/stdin > ../initramfs 
cd ..

INITRAMFS=initramfs

EXITCODE=0
KERNEL_DIR="$HOME/git/landlocktest/images/kernel"
VERSIONS="5.12.0+ 5.15 5.18.0+ 5.19-rc4 5.19 5.19.7 5.19.8 6.0 6.2-rc3 6.2.0-rc3-llnet+"
VERSIONS="5.19 5.19.8 6.0 6.2-rc3 6.2.0-rc3-llnet+"
#VERSIONS="6.2.0-rc3-llnet+"
for KERNEL_VERSION in $VERSIONS; do
  KERNEL_IMG="${KERNEL_DIR}/bzImage.${KERNEL_VERSION}"
  LOGFILE="/tmp/go-test-${KERNEL_VERSION}.log"
  printf "Linux %-18s " "${KERNEL_VERSION}"

  # A hack so that the log file can be just pasted to the command line and run.
  echo "#!/bin/sh" > "${LOGFILE}"
  echo "exec less \$0 || exit 1" >> "${LOGFILE}"
  echo >> "${LOGFILE}"
  chmod +x "${LOGFILE}"

  # Run Qemu and filter out the test output.
  qemu-system-x86_64 \
                     -nographic \
                     -m 4G \
                     -append "console=ttyS0 lsm=landlock" \
                     -kernel "${KERNEL_IMG}" \
                     -initrd "${INITRAMFS}" \
                     > "${LOGFILE}.raw"

  echo "Kernel ${KERNEL_VERSION}" >> "${LOGFILE}"
  cat "${LOGFILE}.raw" \
      | grep -v '^\[' \
            >> "${LOGFILE}"

  if (grep FAIL "${LOGFILE}" >/dev/null); then
      printf " %-34s  ${FAIL}\n" "${LOGFILE}"
      EXITCODE=1
  else
      printf " %-34s  ${PASS}\n" "${LOGFILE}"
  fi
done

rm -rf "${DIR}"

if [ "${EXITCODE}" -eq 1 ]; then
    echo -e "${FAIL}"
else
    echo -e "${PASS}"
fi

exit "${EXITCODE}"
